c
n
c
n
from_phone_number = TWILIO_PHONE_NUMBER
to_phone_number = '+918770834037'
from_phone_number = TWILIO_PHONE_NUMBER
to_phone_number = 'recipient_phone_number'
n
c
TWILIO_ACCOUNT_SID
c
TWILIO_ACCOUNT_SID
TWILIO_ACCOUNT_SID,
c
 BeachFireGuyFinal::Application::TWILIO_ACCOUNT_SID
 BeachFireGuyExtended::Application::TWILIO_ACCOUNT_SID
c
ls
 BeachFireGuyExtended::Application::TWILIO_ACCOUNT_SID
 BeachFireGuyFinal::Application::TWILIO_ACCOUNT_SID
 Rails.application.config_for(:application)['twilio_account_sid']
 Rails.application.config_for[:application]['twilio_account_sid']
 Rails.application.config_for(:application)('twilio_account_sid')
 Rails.application.config_for(:application)['twilio_account_sid']
exit
eixkt
Rails.application.config.twilio_account_sid
Rails.application.config
Twilio::REST::Client.new(
Twilio::REST::Client
c
n
event
n
c
@calendar_service
c
@calendar_service.insert_event(calendar_id, event)
@calendar_service
calendar_id
event
n
c
exit
calendar_service.create_event(summary, start_time, end_time, description, location)
calendar_service
c
n
@calendar_service
@calendar_service.authorization = Google::Auth::ServiceAccountCredentials.make_creds(json_key_io: File.open(Rails.root.join('config', 'credentials', 'google_calendar_key.json')),scope: Google::Apis::CalendarV3::AUTH_CALENDAR)
@calendar_service = Google::Apis::CalendarV3::CalendarService.new
c
end_time = start_time + 30.minutes
start_time =  Time.zone.parse(date +' '+ time).to_datetime
time = order.setup_time_slot.split[0]
date = order.setup_time.strftime("%Y-%m-%d")
c
calendar_service.create_event(summary, start_time, end_time, description, location)
c
@calendar_service.insert_event(calendar_id, event)
calendar_id = 'sandiegobonfires@gmail.com'
c
calendar_service.create_event(summary, start_time, end_time, description, location)
calendar_service
location
description
end_time
start_time
summary
summary,
calendar_service.create_event(summary, start_time, end_time, description, location)
q
c
location.thumbnails
location
continue
order.cart.user
continue
order.cart.user
continue
order.cart.user
continue
order.cart.user
continue
order.cart.user
continue
order.cart.user
order.cart
order
continue
c
if c
ServiceLocation.all
ServiceLocation
self
params
continue
@location.geocode && @location.save
continue
@location.geocode && @location.save
continue
@location.geocode && @location.save
@location
c
@location
continue
@location.save
@location.geocode
@location = ServiceLocation.new(location_params)
continue
@location.geocode
@location.save
@location.geocode.save
@location.geocode
@location = ServiceLocation.new(location_params)
continue
@location.geocode
@location = ServiceLocation.new(location_params)
@location.geocode
@location.gecode
@location.save
@location = ServiceLocation.new(location_params)
continue
@cart.items.where(product_addon_id: params[:product_addons_id]).first.delete
@cart.items.where(product_addon_id: params[:product_addons_id]).first
@cart.items.where(product_addons_id: params[:product_addons_id]).first
@cart = Cart.find(params[:cart_id])
continue
item.update(price: product.price * item.quantity)
item.update(quantity: item.quantity - 1)
n
item = items.where('product_addon_id = ?', product_addons_id).first
product = ProductAddon.find(product_addons_id)
continue
item.update(price: product.price * item.quantity)
item.update(quantity: item.quantity + 1)
continue
item
item = items.where('product_addon_id = ?', product_addons_id).first
continue
items << Item.new(product_addon_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
items
item
items
items << Item.new(product_addon_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id)
continue
Item.new(product_addon_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
continue
Item.new(product_addon_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
Item.new(product_addon_id: product_addon_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
Item.new(product_addons_id: product_addon_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
items << Item.new(product_addon_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
item = items.where('product_addons_id = ?', product_addons_id).first
continue
item = items.where('product_addon_id = ?', product_addons_id).first
item = items.where('product_addon_id = ?', product_addons_id)
product_addons_id
item = items.where('product_addon_id = ?', product_addons_id).first
item = items.where('product_addons_id = ?', product_addons_id).first
item = items.where('product_addon_id = ?', product_addons_id).first
product = ProductAddon.find(product_addons_id)
continue
Item.new(product_addons_id: product_addon_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
Item.new(product_addon_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id).save!
Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.last.cart_id)
Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price, cart_id: items.cart_id)
items << Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
items << Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
items
Item
items << Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
Item.new(name:product.item, price: product.price, product_id:nil, cart)
@cart
@carts
cart
product
Item.new(name:product.item, price: product.price, product_id:nil, cart)
product.item
Item.new(name)
Item.new
continue
save
continue
items.save!
items << Item.create!(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)item
save
items << Item.create!(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)item
Items
items
items << Item.create!(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)item
items << Item.create!(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
items << Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
items
continue
product_addons_id
params
product = ProductAddon.find(product_addons_id)
continue
Item.create!(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
product.price
product.item
product
Item.create!(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
Item.new(product_addons_id: product_addons_id, quantity: 1, name: product.item, price: product.price)
continue
items
product_addons_id
item = items.where('product_addons_id = ?', product_addons_id).first
product = ProductAddon.find(product_addons_id)
continue
product_addons_id
continue
params
continue
params
continue
self
params
product_addons_id
continue
params
continue
params
continue
params
continue
params
continue
params
@cart.add
@cart = Cart.find(params[:cart_id])
@cart@cart = Cart.find(params[:cart_id])
@cart
params[:cart_id]
continue
 @product_addons = ProductAddon.where(service_id:1)
 @product_addons = ProductAddon.where(service_id:1).count
 @product_addons = ProductAddon.find_by(service_id:1).count
 @product_addons = ProductAddon.find_by(service_id:1)
continue
@packages.service.id == 1
@packages.service
continue
@product_addons = ProductAddon.find_by(service_id:@packages.service.id)
@packages.service.id
@product_addons = ProductAddon.last
@product_addons = ProductAddon.all
@product_addons
@packages.service
@packages
@package
params
